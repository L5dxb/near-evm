[package]
name = "near-evm"
edition = "2018"
version = "0.1.0"
authors = ["Near Inc <hello@nearprotocol.com>"]
license = "GPL-3.0"
description = "EVM interpreter as a NEAR smart contract"
publish = false

[dependencies]
evm = { git = "https://github.com/paritytech/parity-ethereum", rev = "eed630a002bbebed3a3097127f2483213ff52079" }
vm = { git = "https://github.com/paritytech/parity-ethereum", rev = "eed630a002bbebed3a3097127f2483213ff52079" }
parity-bytes = "0.1.0"
ethereum-types = "0.6.0"

serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.0"
hex = "0.3.2"
keccak-hash = "0.2.0"

borsh = "0.2.7"
near-bindgen = { git = "https://github.com/nearprotocol/near-bindgen", version = "0.3.10" }

[dev-dependencies]
ethabi = "8.0.0"
ethabi-contract = "8.0.0"
ethabi-derive = "8.0.0"

lazy_static = "1.4"
protobuf = "2.4"
actix = "0.9.0"
futures = "0.3"

near-crypto = { git = "https://github.com/nearprotocol/nearcore", branch = "staging" }
near-client = { git = "https://github.com/nearprotocol/nearcore", branch = "staging" }
near-jsonrpc = { git = "https://github.com/nearprotocol/nearcore", branch = "staging" }
near-jsonrpc-client = { git = "https://github.com/nearprotocol/nearcore", branch = "staging" }
near-primitives = { git = "https://github.com/nearprotocol/nearcore", branch = "staging" }

[lib]
# crate-type = ["cdylib", "rlib"]

[profile.release]
codegen-units = 1
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true
debug = false
panic = "abort"

[profile.dev]
debug = 0

[features]
default = []
# env_test = ["near-bindgen/testing"]
